n the initialization phase, the Trusted Authority (TA) creates the foundation
of the federated learning framework. The TA executes the setup procedure of
Ciphertext-Policy Attribute-Based Encryption (CP-ABE), generating a public
key (PK) and a master secret key (MSK). The public key is shared with all
participants, while the master secret key is kept strictly confidential by the TA.
At the same time, the TA defines the set of registered medical facilities U and
establishes the attribute universe A, which contains categorical descriptors such
as role, institution type, or region. These attributes later control which participants are allowed to access and decrypt the distributed models. The process
can be summarized by the following equation:
Setup(1k, U, A) → (PK, MSK)
where k is the system’s security parameter, U represents the set of facilities,
and A denotes the attribute universe. Once the setup is complete, the TA generates a private decryption key for each registered facility based on its attributes.
This guarantees that only facilities meeting specific attribute-based policies can
decrypt encrypted models in the later phases. To prevent malicious entities from
flooding the system with fake identities (Sybil attacks) or spamming registration
requests, every facility must solve a Proof-of-Work (PoW) challenge before registration. The PoW mechanism requires the facility to compute a valid nonce
that, when hashed with its identity and public key, produces a digest below
a predefined difficulty target. This ensures that the facility expends real computational resources to prove its legitimacy. The PoW condition is expressed as:
H(nonce ∥ F acility ID ∥ PK) ≤ T arget
Here, H represents a secure hash function, nonce is the random number adjusted by the facility, F acility ID is its unique identifier, and PK is the system’s
public key. The Target defines the difficulty level chosen by the TA. Facilities repeatedly adjust the nonce until the condition is satisfied. This procedure works
as follows:
• The TA issues a challenge by specifying the difficulty target.
• The facility repeatedly computes the hash of (nonce||F acility ID||PK).
• If the resulting hash is greater than the target, the facility changes the
nonce and retries.
• Once a valid nonce is found, the facility sends the solution to the TA.
• The TA verifies the hash in constant time, ensuring that the facility actually performed the computation.
9Through this mechanism, the system ensures that every registered participant
has a computational cost associated with its identity, making Sybil attacks impractical. Only after passing this challenge does the TA provide the facility with
its attribute-based secret key. The setup and PoW registration procedures can
be illustrated by Algorithm 1 and Algorithm 2, respectively.
Algorithm 1 System Setup by Trusted Authority (TA)
Input: Security parameter λ, set of facilities U, attribute universe A
Output: Public Key PK, Master Secret Key MSK
1: (PK, MSK) ← Setup(λ, U, A)
2: TA securely stores MSK and distributes PK to all registered facilities
3: Define attribute-based access policies for model decryption
Algorithm 2 Facility Registration with Proof-of-Work
Input: Facility request Req, difficulty parameter D
Output: Verified facility F and issued secret keys
1: Facility solves PoW challenge: Nonce ← FindNonce(H(Req||Nonce) < D)
2: if PoW verified by TA then
3: TA issues secret key SKfacility based on CP-ABE attributes
4: Register facility in system database
5: end if
2.4.2 Model Distribution
After initialization, the Trusted Authority (TA) prepares and distributes the
initial machine learning model across the federation in a secure and controlled
manner. The TA encrypts the global model using Ciphertext-Policy AttributeBased Encryption (CP-ABE), ensuring that only facilities whose attributes satisfy the access policy can decrypt and use the model. The encryption process
enforces fine-grained access control while preventing unauthorized entities from
gaining access, even if they intercept the ciphertext. The encryption algorithm
is expressed as:
Encrypt(Model, PK, T) → CT
where Model is the initial global model, PK is the public key from the setup
phase, and T is the access policy tree that encodes attribute-based restrictions
(e.g., facilitytype = hospital AND region = North). The output CT is the encrypted ciphertext of the model. When a registered facility wishes to obtain the
global model, it must first authenticate itself by sending an encrypted request
10to the Leader Server (randomly selected from among fog nodes). This ensures
secure communication between facilities and fog infrastructure. The encrypted
request is computed as:
Encrypt(PKLeader, req) → encryReq
where req is the facility’s request for the model and PKLeader is the public
key of the leader server. Upon receiving encryReq, the leader server decrypts
the request to recover req. Once verified, the leader server transmits the CPABE ciphertext CT to the requesting facility. Only facilities whose attributes
satisfy the policy T can decrypt the ciphertext. The decryption process is:
Decrypt(CT, SKuser)) → Model
where SKuser is the private decryption key generated by the TA for that
facility during initialization. This process ensures several guarantees:
• Confidentiality – Only facilities with valid attributes can decrypt and access the model.
• Controlled Distribution – Unauthorized entities, even if they intercept the
ciphertext, cannot recover the model.
• Scalability – Multiple facilities can request the model simultaneously from
the fog-based leader server without overloading the TA.
• Authentication – Facilities prove their legitimacy by encrypting their requests to the leader server, which prevents replay or impersonation attacks.
As a result, the model distribution stage establishes a secure channel between the
federation coordinator and the medical facilities, ensuring that only legitimate
and policy-compliant participants begin local training.
The secure distribution of the initial global model, including CP-ABE encryption and request authentication, is detailed in Algorithm 3.
Algorithm 3 Initial Model Distribution and Decryption by Facility
Input: Encrypted initial model CT, facility private key SKfacility
Output: Decrypted initial model Minit
1: Minit ← User Decrypt(CT, SKfacility)
2: Facility uses Minit as the starting point for local training
2.4.3 Local Training, Differential Privacy, and Secret Sharing
After receiving the encrypted global model from the leader server, each medical
facility decrypts it using its private key obtained during system initialization.
11The decryption is performed as:
User Decrypt(CT, SKfacility) → Model
where CT is the encrypted global model and SKfacility is the facility’s private secret key. If the facility’s attributes satisfy the CP-ABE policy, the decryption succeeds. Once the global model is obtained, each facility performs
local training on its private dataset Di for a specified number of epochs E. The
result of this computation is an updated local model Mlocali. To ensure privacy,
before sharing, each facility perturbs its local model with differential privacy
noise. Using the Gaussian mechanism, the facility computes:
M′
locali = Mlocali + N(0, σ2)